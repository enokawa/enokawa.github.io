<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>S3 on あしたから本気だす</title>
    <link>http://blog.enokawa.co/tags/s3/</link>
    <description>Recent content in S3 on あしたから本気だす</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Fri, 13 Oct 2017 23:08:58 +0900</lastBuildDate>
    
	<atom:link href="http://blog.enokawa.co/tags/s3/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CloudFront&#43;S3で構成する静的ウェブサイトホスティングのベストプラクティス</title>
      <link>http://blog.enokawa.co/2017/10/13/best-practice-for-static-web-site-hosting-with-cloudfront-and-s3/</link>
      <pubDate>Fri, 13 Oct 2017 23:08:58 +0900</pubDate>
      
      <guid>http://blog.enokawa.co/2017/10/13/best-practice-for-static-web-site-hosting-with-cloudfront-and-s3/</guid>
      <description>はじめに えのかわです。
よくある、CloudFrnt + S3 を用いた静的ウェブサイトホスティングの、ベストプラクティスをログとして残します。（よく説明することがあるので、、）
構成 S3 を CloudFront Origin として登録する際に、2 つの方法があると思っています。
 S3 Origin Custom Origin(Static website hostingのURLで)  しかし2つの方法にはメリットデメリットがあります。
 S3 Origin  メリット: OAIによるS3への直接アクセスを防ぐことが可能 デメリット: ディレクトリを掘ったパスにアクセスした際にindex.htmlがロードされない  Custom Origin  メリット: ディレクトリを掘ったパスにアクセスした際にindex.htmlがロードされる デメリット: S3 へ直接アクセスできてしまう   本題 Cloud Front の Origin として、Custom Origin で登録する方法で進めます。該当の S3 は Static website hosting を有効化します。 その上で S3 のバケットポリシー側で UserAgent 値が Amazon CloudFront であった場合にコンテンツを返すように記載します。
{ &amp;quot;Version&amp;quot;: &amp;quot;2008-10-17&amp;quot;, &amp;quot;Statement&amp;quot;: [ { &amp;quot;Sid&amp;quot;: &amp;quot;AllowFromCloudFront&amp;quot;, &amp;quot;Effect&amp;quot;: &amp;quot;Allow&amp;quot;, &amp;quot;Principal&amp;quot;: &amp;quot;*&amp;quot;, &amp;quot;Action&amp;quot;: &amp;quot;s3:GetObject&amp;quot;, &amp;quot;Resource&amp;quot;: &amp;quot;arn:aws:s3:::example.</description>
    </item>
    
  </channel>
</rss>